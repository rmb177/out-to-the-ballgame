// Generated by CoffeeScript 1.3.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty;

  ottb.Map = (function() {

    Map.name = 'Map';

    function Map(selectLinkCallback) {
      this.setupSelectLinkListener = __bind(this.setupSelectLinkListener, this);
      this.map = new google.maps.Map(document.getElementById("schedule-map"), gMapOptions);
      this.gameMarkers = {};
      this.lastInfoWindow = null;
      this.selectLinkCallback = selectLinkCallback;
      this.setupSelectLinkListener();
    }

    Map.prototype.addDatePicker = function(datePickerHtml) {
      return this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(datePickerHtml);
    };

    Map.prototype.addItinerary = function(itineraryHtml) {
      return this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(itineraryHtml);
    };

    Map.prototype.displayGames = function(games) {
      var aMarker, game, teamAbbr, that, _i, _len, _ref, _results;
      that = this;
      _ref = that.gameMarkers;
      for (teamAbbr in _ref) {
        if (!__hasProp.call(_ref, teamAbbr)) continue;
        aMarker = _ref[teamAbbr];
        that.fadeOutMarker(aMarker);
      }
      that.lastInfoWindow = null;
      _results = [];
      for (_i = 0, _len = games.length; _i < _len; _i++) {
        game = games[_i];
        _results.push((function(game) {
          var context, marker, source, template;
          marker = that.gameMarkers[game.home_team_abbr];
          if (!(marker != null)) {
            marker = new google.maps.Marker({
              position: new google.maps.LatLng(parseFloat(game.lat), parseFloat(game.lon)),
              map: that.map,
              opacity: 0
            });
          }
          marker.setTitle(game.away_team + ' @ ' + game.home_team);
          that.fadeInMarker(marker, 0);
          source = $("#info-window").html();
          template = Handlebars.compile(source);
          context = {
            game_id: game.id,
            away_team: game.away_team_abbr,
            home_team: game.home_team_abbr,
            game_time: game.game_time,
            displaySelectGameLink: true
          };
          google.maps.event.addListener(marker, 'click', function() {
            if (that.lastInfoWindow !== null) {
              that.lastInfoWindow.close();
            }
            that.lastInfoWindow = new google.maps.InfoWindow();
            that.lastInfoWindow.setContent(template(context));
            that.lastInfoWindow.open(that.map, marker);
            return false;
          });
          return that.gameMarkers[game.home_team_abbr] = marker;
        })(game));
      }
      return _results;
    };

    Map.prototype.setupSelectLinkListener = function() {
      var that;
      that = this;
      return $(document).on("click", ".select-game-link a", function(event) {
        if (that.lastInfoWindow !== null) {
          that.lastInfoWindow.close();
        }
        that.selectLinkCallback(this.id);
        return false;
      });
    };

    Map.prototype.fadeInMarker = function(marker, opacity) {
      var that;
      that = this;
      return setTimeout(function() {
        marker.setOpacity(opacity);
        if (opacity < 1) {
          return that.fadeInMarker(marker, opacity + .2);
        }
      }, 50);
    };

    Map.prototype.fadeOutMarker = function(marker) {
      var opacity, that;
      that = this;
      opacity = marker.getOpacity();
      if (Math.abs(opacity) < 0.000001) {
        return marker.setOpacity(0);
      } else {
        marker.setOpacity(opacity - .2);
        return setTimeout(function() {
          return that.fadeOutMarker(marker);
        }, 50);
      }
    };

    return Map;

  })();

}).call(this);
